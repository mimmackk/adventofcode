{
  "hash": "52983c820a585bffafb7ad83ba444098",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Day 20\"\ndate: 2021-12-20\nauthor:\n  name: https://adventofcode.com/2021/day/20\n  url: https://adventofcode.com/2021/day/20\n---\n\n\n\n## Setup\n\nImport libraries:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n\nRead input from file, converting \"#\"/\".\" characters to 1/0 integers:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninput <- read_lines(\"../input/day20.txt\", skip_empty_rows = TRUE) |> \n  str_split(\"\") |> \n  map(~ case_match(.x, \".\" ~ 0, \"#\" ~ 1))\n```\n:::\n\n\n\nSeparate the input into the algorithm sequence and image matrix:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nalg <- pluck(input, 1)\nimg <- tail(input, -1) |> do.call(what = rbind)\n```\n:::\n\n\n\n## Part 1\n\nPrint the starting image:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint_img <- \\(img) {\n  image(\n    t(img)[, nrow(img):1],\n    col = c(\"black\", \"white\"), \n    asp = nrow(img) / ncol(img),\n    axes = FALSE\n  )\n}\n\nprint_img(img)\n```\n\n::: {.cell-output-display}\n![](day20_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\nDefine a function to enhance the given image. Since the character representing the infinte expansion in all directions can change from enhancement to enhancement, we track its current value in the `inf` argument.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nenhance <- function(mtx, inf = 0) {\n  \n  # Expand the borders of the image so that all 3x3 subsets are accessible\n  mtx <- rbind(inf, inf, cbind(inf, inf, mtx, inf, inf), inf, inf)\n  \n  # Generate the full set of output coords\n  mtx_out <- expand_grid(\n    row = 1:(nrow(mtx) - 2),\n    col = 1:(ncol(mtx) - 2) \n  ) |> \n    \n    # Convert output coords to 3x3 ranges of the input and get the output value\n    mutate(\n      bin = map2_chr(row, col, ~ str_flatten(t(mtx[.x + 0:2, .y + 0:2]), \"\")),\n      idx = strtoi(bin, base = 2) + 1,\n      out = alg[idx]\n    ) |> \n    \n    # Compress back down into matrix format\n    pull(out) |> \n    matrix(nrow = nrow(mtx) - 2, byrow = TRUE)\n  \n  # Determine the new value of the infinite grid\n  inf_out <- alg[strtoi(str_flatten(rep(inf, 9), \"\"), base = 2) + 1]\n  \n  lst(mtx = mtx_out, inf = inf_out)\n}\n```\n:::\n\n\n\nDefine a function that enhances the image a given number of times:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nenhance_n <- function(img, n) {\n  lst(mtx = img, inf = 0) |> \n    reduce(1:n, .f = ~ do.call(what = enhance, args = .x), .init = _) |> \n    pluck(\"mtx\")\n}\n```\n:::\n\n\n\nEnhance the image twice, then count how many pixels are lit in the result:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresult <- enhance_n(img, n = 2)\n\nsum(result)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5179\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprint_img(result)\n```\n\n::: {.cell-output-display}\n![](day20_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n\n\n## Part 2\n\nEnhance the image 50 times:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresult <- enhance_n(img, n = 50)\n\nsum(result)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 16112\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprint_img(result)\n```\n\n::: {.cell-output-display}\n![](day20_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "day20_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}