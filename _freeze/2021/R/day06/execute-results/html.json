{
  "hash": "4205e09bfbbcaa3d89febc1d8b9028ba",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Day 6\"\ndate: 2021-12-06\nauthor:\n  name: https://adventofcode.com/2021/day/06\n  url: https://adventofcode.com/2021/day/06\n---\n\n\n\n## Setup\n\nImport libraries:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n\nDisable scientific formatting when displaying large numbers:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\noptions(scipen = 999)\n```\n:::\n\n\n\n\nRead input from file:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninput <- scan(\"../input/day06.txt\", sep = \",\", quiet = TRUE)\n```\n:::\n\n\n\n## Part 1\n\nAt any given point in time, we can only have fish with ages 0-8. We track the state of our system by logging counts of how many fish exist in each age bucket. To begin, we construct the initial state as a vector of counts for each age, filling with zeroes for ages not present:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninit <- input |> \n  enframe(name = NULL, value = \"age\") |> \n  summarize(n = n(), .by = age) |> \n  complete(age = 0:8, fill = lst(n = 0)) |> \n  pull(n) |> \n  as.numeric()\n```\n:::\n\n\n\nDefine a function to compute the count of fish on the next day given a fish count on the current day. All counts shift down one unit in age. Fish at age 0 all move to age 6 and create a new age-8 fish. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nage_up <- \\(x) c(x[2:7], x[8] + x[1], x[9], x[1])\n```\n:::\n\n\n\nDefine a function to run the simulation for n days and count the total fish at the end:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncount_fish <- function(init, n_days) {\n  reduce(1:n_days, \\(acc, nxt) age_up(acc), .init = init) |> \n    sum()\n}\n```\n:::\n\n\n\nCount the total fish after 80 days:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncount_fish(init, 80)\n```\n:::\n\n\n\n## Part 2\n\nCount the total fish after 256 days:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncount_fish(init, 256)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}