{
  "hash": "2f76db25f7f1217c54e6354efcd0fa6a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Day 5\"\ndate: 2021-12-05\nauthor:\n  name: https://adventofcode.com/2021/day/05\n  url: https://adventofcode.com/2021/day/05\n---\n\n\n\n## Setup\n\nImport libraries:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(unglue)\n```\n:::\n\n\n\nRead input from file:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninput <- read_lines(\"../input/day05.txt\")\n```\n:::\n\n\n\nConvert plain-text input to a dataframe of numeric values:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninput_df <- input |> \n  unglue_data(\"{x1=\\\\d+},{y1=\\\\d+} -> {x2=\\\\d+},{y2=\\\\d+}\", convert = TRUE) |> \n  mutate(id = row_number(), .before = everything())\n```\n:::\n\n\n\n\n## Part 1\n\nFlag each line segment as horizontal, vertical or diagonal. Then, compute the list of all integer points that fall along the line.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlines <- input_df |> \n  mutate(\n    type = case_when(\n      x1 == x2 ~ \"v\",\n      y1 == y2 ~ \"h\",\n      .default = \"d\"\n    ),\n    x = map2(x1, x2, ~ seq(..1, ..2)),\n    y = map2(y1, y2, ~ seq(..1, ..2))\n  ) |> \n  unnest(cols = c(x, y))\n```\n:::\n\n\n\nCompute the number of points that are covered by at least 2 overlapping horizontal or vertical lines (diagonals excluded):\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlines |> \n  filter(type %in% c(\"v\", \"h\")) |> \n  summarize(n = n(), .by = c(x, y)) |> \n  filter(n > 1) |> \n  nrow()\n```\n:::\n\n\n\n## Part 2\n\nRepeat the count of overlapping points, now allowing diagonals:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlines |> \n  summarize(n = n(), .by = c(x, y)) |> \n  filter(n > 1) |> \n  nrow()\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}