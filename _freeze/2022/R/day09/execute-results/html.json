{
  "hash": "bb204a16cfb97513952950d80d49b5a8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Day 9\"\ndate: 2022-12-09\nauthor:\n  name: https://adventofcode.com/2022/day/9\n  url: https://adventofcode.com/2022/day/9\n---\n\n\n\n\n## Setup\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Libraries\nlibrary(tidyverse)\nlibrary(ctmle, include.only = \"bound\")\n\n# Read input from file\ninput <- read_lines(\"../input/day09.txt\") |>\n  str_split(\" \")\n```\n:::\n\n\n\n\n## Part 1\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Convert head movements to sequence of locations on complex plane\nhead_path <- input |>\n  map(~ rep(.x[[1]], .x[[2]])) |>\n  reduce(c) |>\n  recode(\"R\" = 1 + 0i, \"L\" = -1 + 0i, \"U\" = 0 + 1i, \"D\" = 0 - 1i) |>\n  accumulate(.init = 0 + 0i, .f = sum)\n\n# Find path of next knot given path of previous knot.\nmove_next_knot <- function(prev_knot_path) {\n  accumulate(\n    .x = prev_knot_path,\n    .f = function(tail = .x, head = .y) {\n      diff <- head - tail\n      if_else(\n        max(abs(Re(diff)), abs(Im(diff))) <= 1,\n        tail,\n        tail + bound(Re(diff), c(-1, 1)) + bound(Im(diff), c(-1, 1)) * 1i\n      )\n    }\n  )\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nunique_tail_spots <- function(path, num_knots) {\n  # Iteratively compute path of each knot from head & to tail\n  move_tail <- reduce(map(1:(num_knots - 1), ~ move_next_knot), compose)\n\n  # Find number of unique locations in the tail's path\n  length(unique(move_tail(path)))\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nunique_tail_spots(head_path, num_knots = 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 6197\n```\n\n\n:::\n:::\n\n\n\n\n## Part 2\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique_tail_spots(head_path, num_knots = 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2562\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}