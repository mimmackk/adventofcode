{
  "hash": "d876d6f0a6fe273ddba959ed8ca95cae",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Day 1\"\ndate: 2022-12-01\nauthor:\n  name: https://adventofcode.com/2022/day/1\n  url: https://adventofcode.com/2022/day/1\n---\n\n\n\n## Setup\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Libraries\nlibrary(tidyverse)\n\n# Read input from file\ninput <- read_lines(\"../input/day01.txt\") |> \n  as.integer()\n```\n:::\n\n\n\n## Part 1\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Format input as a data frame and number the elves\ndf <- tibble(\n  cal = input,\n  elf_id = cumsum(is.na(cal)) + 1\n) |>\n  filter(!is.na(cal))\n\n# Compute calorie sum for each elf, get the top n elves, and combine totals\ncount_max <- function(df, num_top_elves) {\n  df |> \n    group_by(elf_id) |>\n    summarize(total_cal = sum(cal)) |>\n    slice_max(total_cal, n = num_top_elves) |>\n    pull(total_cal) |>\n    sum()\n}\n```\n:::\n\n\n\nRun puzzle input:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncount_max(df, 1)\n```\n:::\n\n\n\n## Part 2\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncount_max(df, 3)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}