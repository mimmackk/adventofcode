{
  "hash": "ff78be928392f4be9652167f270643ab",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Day 10\"\ndate: 2022-12-10\nauthor:\n  name: https://adventofcode.com/2022/day/10\n  url: https://adventofcode.com/2022/day/10\n---\n\n\n\n\n## Setup\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Libraries\nlibrary(tidyverse)\n\n# Read input from file\ninput <- read_lines(\"../input/day10.txt\") |>\n  enframe(name = \"cmd_num\")\n```\n:::\n\n\n\n\n## Part 1\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsignal <- input |>\n\n  # Convert multi-cycle commands into list of changes to X at each cycle\n  separate(value, into = c(\"cmd\", \"V\"), sep = \" \", convert = TRUE) |>\n  transmute(cmd_num, v1 = 0, v2 = V) |>\n  pivot_longer(\n    c(v1, v2),\n    names_to = \"cycle_count\",\n    values_to = \"x_change\",\n    values_drop_na = TRUE\n  ) |>\n  pull(x_change) |>\n\n  # Iterate through changes to X to get value of X during each cycle\n  accumulate(`+`, .init = 1) |>\n  enframe(name = \"cycle\", value = \"X\") |>\n  slice_head(n = -1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Sum the signal strength at 20th cycle & every 40 cycles after that\nsignal |>\n  filter(cycle %% 40 == 20) |>\n  mutate(signal_strength = cycle * X) |>\n  pull(signal_strength) |>\n  sum()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 16020\n```\n\n\n:::\n:::\n\n\n\n\n## Part 2\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Draw pixel when position of 3px-wide sprite overlaps w/ CRT position\nsignal |>\n  mutate(\n    row = floor((cycle - 1) / 40),\n    col = (cycle - 1) %% 40\n  ) |>\n  mutate(pixel = if_else(X <= col + 1 & X >= col - 1, \"#\", \".\")) |>\n  group_by(row) |>\n  summarize(val = str_c(pixel, collapse = \"\")) |>\n  pull(val) |>\n  cat(sep = \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n####..##..####.#..#.####..##..#....###..\n#....#..#....#.#..#....#.#..#.#....#..#.\n###..#......#..#..#...#..#..#.#....#..#.\n#....#.....#...#..#..#...####.#....###..\n#....#..#.#....#..#.#....#..#.#....#.#..\n####..##..####..##..####.#..#.####.#..#.\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}