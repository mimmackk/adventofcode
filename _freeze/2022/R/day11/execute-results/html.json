{
  "hash": "415521fa3c52a5af930b5e1eafe9d72b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Day 11\"\ndate: 2022-12-11\nauthor:\n  name: https://adventofcode.com/2022/day/11\n  url: https://adventofcode.com/2022/day/11\n---\n\n\n\n\n## Setup\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Libraries\nlibrary(tidyverse)\n\n# Read input from file\ninput <- read_lines(\"../input/day11.txt\") |>\n  trimws() |>\n  discard(~ .x == \"\")\n```\n:::\n\n\n\n\n## Part 1\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Reformat input\nitems <- str_match(input, \"Starting items:(.*)\")[,2] |>\n  discard(is.na) |>\n  str_split(\",\") |>\n  map(parse_number)\n\noperations <- input |>\n  keep(~ str_detect(.x, \"Operation:\")) |>\n  str_replace(\"Operation: new = \", \"~ \") |>\n  str_replace_all(\"old\", \".x\") |>\n  map(~ rlang::as_function(as.formula(.x)))\n\ndiv  <- parse_number(keep(input, ~ str_detect(.x, \"Test:\")))\ndivt <- parse_number(keep(input, ~ str_detect(.x, \"If true:\")))\ndivf <- parse_number(keep(input, ~ str_detect(.x, \"If false:\")))\n\ntest <- pmap(\n  list(div, divt, divf),\n  ~ function(x) if_else(x %% ..1 == 0, ..2 + 1, ..3 + 1)\n)\n\nnum_monkeys <- length(input) / 6\n\n\ncompute_monkey_business <- function(num_rounds, worry_func) {\n  # Initialize\n  activity <- rep(0, num_monkeys)\n\n  # Perform the tosses\n  for (round in 1:num_rounds) {\n    for (monkey in 1:num_monkeys) {\n      for (item in items[[monkey]]) {\n        worry <- worry_func(operations[[monkey]](item))\n        toss  <- test[[monkey]](worry)\n        items[[toss]] <- c(items[[toss]], worry)\n      }\n      activity[[monkey]] <- activity[[monkey]] + length(items[[monkey]])\n      items[[monkey]] <- numeric(0)\n    }\n  }\n\n  # Compute monkey business score\n  activity |>\n    sort() |>\n    tail(2) |>\n    reduce(`*`)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncompute_monkey_business(num_rounds = 20, worry_func = \\(x) floor(x / 3))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 78678\n```\n\n\n:::\n:::\n\n\n\n\n## Part 2\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlcm <- DescTools::LCM(div)\ncompute_monkey_business(num_rounds = 10000, worry_func = \\(x) x %% lcm)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 15333249714\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}