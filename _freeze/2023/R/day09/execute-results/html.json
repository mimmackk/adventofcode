{
  "hash": "f06773565f0b7ffc4d284cc01080724c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Day 9\"\ndate: 2023-12-09\nauthor:\n  name: https://adventofcode.com/2023/day/9\n  url: https://adventofcode.com/2023/day/9\n---\n\n\n\n\n## Setup\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Libraries\nlibrary(tidyverse)\n\n# Read input from file\ninput <- read_lines(\"../input/day09.txt\", skip_empty_rows = TRUE)\n```\n:::\n\n\n\n\n## Part 1\n\nConvert text input into a series of numeric sequences:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseqs <- input |> \n  str_split(\"\\\\s+\") |> \n  map(as.numeric)\n```\n:::\n\n\n\n\nDefine a function to get the next value in a sequence:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nextrapolate_next <- function(x) {\n  if (all(x == 0))\n    return(0)\n  else\n    return(tail(x, 1) + extrapolate_next(diff(x)))\n}\n```\n:::\n\n\n\n\nCompute next value of every sequence in the input, then sum the result:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseqs |> \n  map_dbl(extrapolate_next) |> \n  sum()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1641934234\n```\n\n\n:::\n:::\n\n\n\n\n\n## Part 2\n\nModify the function to get the preceeding sequence value, rather than the next:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nextrapolate_prev <- function(x) {\n  if (all(x == 0))\n    return(0)\n  else\n    return(head(x, 1) - extrapolate_prev(diff(x)))\n}\n```\n:::\n\n\n\n\nRun on puzzle input:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseqs |> \n  map_dbl(extrapolate_prev) |> \n  sum()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 975\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}