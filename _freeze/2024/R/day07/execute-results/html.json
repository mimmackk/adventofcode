{
  "hash": "4cfce8e7783edb9c188e637b5fc5a683",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Day 7\"\ndate: 2024-12-07\nauthor:\n  name: https://adventofcode.com/2024/day/7\n  url: https://adventofcode.com/2024/day/7\n---\n\n\n\n\n\n## Setup\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Libraries\nlibrary(tidyverse)\n\n# Read input from file\ninput <- read_lines(\"../input/day07.txt\", skip_empty_rows = TRUE) |> \n  str_split(\" \") |> \n  map(parse_number)\n```\n:::\n\n\n\n\n\n## Part 1\n\nDefine calibration functions:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncalibrate_operators <- function(seq, target, operators) {\n  \n  # If the end of the list has been reached or the target is already overshot, exit\n  if (length(seq) == 1) \n    return(seq == target)\n  else if (seq[1] > target)\n    return(FALSE)\n  \n  # Recursively compare the first two items of the seq using each operator\n  map_lgl(\n    operators,\n    \\(f) {\n      new_start <- get(f)(seq[1], seq[2])\n      new_seq <- c(new_start, tail(seq, -2))\n      calibrate_operators(new_seq, target, operators)\n    }\n  ) |> \n    # If any output is true, the output has been calibrated.\n    any()\n}\n\ncalibration_value <- function(input, output, operators) {\n  # Compute calibration for each input-output pair\n  is_calibrated <- map2_lgl(\n    input, \n    output, \n    ~ calibrate_operators(.x, .y, operators = operators)\n  )\n  \n  # Sum the calibrated outputs\n  output |> \n    keep(is_calibrated) |> \n    sum() |> \n    format(scientific = FALSE)\n}\n```\n:::\n\n\n\n\n\nCompute calibration of the puzzle input:\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninput_values  <- map(input, tail, -1)\noutput_values <- map_dbl(input, head, 1)\n  \ncalibration_value(input_values, output_values, c(\"+\", \"*\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"12940396350192\"\n```\n\n\n:::\n:::\n\n\n\n\n\n## Part 2\n\nAdd a new concatenation operator and re-run the calibration on the puzzle input\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconcat <- function(x, y) as.numeric(str_c(x, y))\n\ncalibration_value(input_values, output_values, c(\"+\", \"*\", \"concat\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"106016735664498\"\n```\n\n\n:::\n:::\n",
    "supporting": [
      "day07_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}