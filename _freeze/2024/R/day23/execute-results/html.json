{
  "hash": "811149f5f9a91cc06cb8b5b3404bf8f4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Day 23\"\ndate: 2024-12-23\nauthor:\n  name: https://adventofcode.com/2024/day/23\n  url: https://adventofcode.com/2024/day/23\n---\n\n\n\n\n## Setup\n\nImport libraries:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(unglue)\nlibrary(igraph)\n```\n:::\n\n\n\n\nRead input from text file into a data frame:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninput <- read_lines(\"../input/day23.txt\") |> \n  unglue_data(\"{v1}-{v2}\")\n```\n:::\n\n\n\n\n## Part 1\n\nConvert the lists of connections to an undirected graph:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- input |> \n  pmap(function(v1, v2) c(v1, v2)) |> \n  unlist() |> \n  make_graph(directed = FALSE)\n```\n:::\n\n\n\n\nFind all sets of 3 connected vertices (cliques of size 3) and count the sets having some vertex starting with 't'\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncliques(g, min = 3, max = 3) |> \n  keep(\n    ~ names(.x) |> \n      str_starts(\"t\") |> \n      any()\n  ) |> \n  length()\n```\n:::\n\n\n\n\n## Part 2\n\nFind the largest interconnected set of vertices, then convert the list of vertices into the \"password\" by sorting alphabetically and concatenating with commas:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng |> \n  largest_cliques() |> \n  unlist() |> \n  names() |> \n  sort() |> \n  str_flatten(\",\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}