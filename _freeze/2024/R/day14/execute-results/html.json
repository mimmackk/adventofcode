{
  "hash": "4381690ca10fd0d1432d6d4da573a11f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Day 14\"\ndate: 2024-12-14\nauthor:\n  name: https://adventofcode.com/2024/day/14\n  url: https://adventofcode.com/2024/day/14\n---\n\n\n\n\n## Setup\n\nImport libraries:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(unglue)\n```\n:::\n\n\n\n\nRead input from file:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninput <- read_lines(\"../input/day14.txt\")\n```\n:::\n\n\n\n\nExtract numerical values from plaintext input:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- input |>\n  unglue_data(\"p={x},{y} v={vx},{vy}\") |> \n  mutate(\n    across(everything(), parse_number),\n    robot_id = row_number(),\n    .before = everything()\n  )\n```\n:::\n\n\n\n\nDefine parameters: dimensions of the room:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nroom_w <- 101\nroom_h <- 103\n```\n:::\n\n\n\n\n## Part 1\n\nDefine a function which gives the location of the robots after n seconds. Multiply n by the velocity, add to the current position, and modulo the room dimensions.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npass_time <- function(df, seconds) {\n  df |> \n    mutate(\n      x = (x + vx * seconds) %% room_w,\n      y = (y + vy * seconds) %% room_h\n    )\n}\n```\n:::\n\n\n\n\nDefine a function to get the current safety factor by counting the number of robots in each quadrant of the room:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_safety_score <- function(df) {\n  mid_w <- (room_w - 1) / 2\n  mid_h <- (room_h - 1) / 2\n  \n  df |> \n    mutate(\n      half_w = case_when(x < mid_w ~ 0, x > mid_w ~ 1),\n      half_h = case_when(y < mid_h ~ 0, y > mid_h ~ 1),\n      quadrant = half_w + 2 * half_h\n    ) |> \n    drop_na(quadrant) |> \n    summarize(num_robots = n(), .by = quadrant) |> \n    pull(num_robots) |> \n    prod()\n}\n```\n:::\n\n\n\n\nCompute safety score of puzzle input:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf |> \n  pass_time(100) |> \n  get_safety_score()\n```\n:::\n\n\n\n\n## Part 2\n\nFirst, find the cycle of seconds where the robots' positions repeat (no more than the least common multiple of the room width and room height)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncycle <- DescTools::LCM(room_w, room_h)\n```\n:::\n\n\n\n\nFor each unique snapshot in the cycle, test for randomness vs structure in the X-Y coordinates.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsimulations <- map_dfr(1:cycle, \\(seconds) {\n  new <- pass_time(df, seconds)\n  c(secs = seconds, xvar = var(new$x), yvar = var(new$y))\n})\n\nsimulations |> \n  arrange(xvar, yvar, secs) |> \n  filter(row_number() == 1) |> \n  pull(secs)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}