{
  "hash": "8bff644da1599d5a45b571aaef52d743",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Day 2\"\ndate: 2024-12-02\nauthor:\n  name: https://adventofcode.com/2024/day/2\n  url: https://adventofcode.com/2024/day/2\n---\n\n\n\n\n## Setup\n\nImport libraries:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n\n\nRead text input from file into a list of numeric vectors:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninput <- read_lines(\"../input/day02.txt\") |> \n  str_split(\" \") |> \n  map(parse_number)\n```\n:::\n\n\n\n\n## Part 1\n\nDefine a function to determine whether a sequence is valid (all values are increasing or all are decreasing, with integer differences between 1 and 3):\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nis_valid <- function(seq) {\n  gaps <- head(seq, -1) - tail(seq, -1)\n  (all(gaps < 0) | all(gaps > 0)) & all(abs(gaps) <= 3)\n}\n```\n:::\n\n\n\n\nCount the number of safe reports in the puzzle input: \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninput |> \n  map_lgl(is_valid) |> \n  sum()\n```\n:::\n\n\n\n\n## Part 2\n\nFor each report in the input, create a set of variants where a single level from the report is removed at a time. Then, check the validity of each of these altered reports (and the original) & count how many reports are or can become valid:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninput |> \n  map(\\(seq) c(list(seq), map(1:length(seq), \\(n) discard_at(seq, n)))) |> \n  map_lgl(\\(set) any(map_lgl(set, is_valid))) |> \n  sum()\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}