{
  "hash": "92f93cb8e08c77cac6e78e8cdd6fdaca",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Day 2\"\ndate: 2024-12-02\nauthor:\n  name: https://adventofcode.com/2024/day/2\n  url: https://adventofcode.com/2024/day/2\n---\n\n\n\n## Setup\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Libraries\nlibrary(tidyverse)\n\n# Read input from file\ninput <- read_lines(\"../input/day02.txt\") |> \n  map(~parse_number(str_split_1(.x, \" \")))\n```\n:::\n\n\n\n## Part 1\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Compute difference between consecutive integers\nseq_gaps <- function(seq)\n  head(lead(seq) - seq, -1)\n\n# Check whether the sequence is incr/decr with gaps between 1 and 3\ngaps_are_valid <- function(gaps)\n  (all(gaps < 0) | all(gaps > 0)) & all(between(abs(gaps), 1, 3))\n\n# Count number of safe reports\ninput |> \n  map(seq_gaps) |> \n  map_lgl(gaps_are_valid) |> \n  sum()\n```\n:::\n\n\n\n## Part 2\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntibble(input) |> \n  \n  # For each report, create a set of versions where each level is removed\n  mutate(\n    id = row_number(),\n    mod = map(input, \\(seq) map(1:length(seq), \\(n) seq[-c(n)])),\n  ) |> \n  unnest(mod) |> \n  \n  # Check validity of each report and its altered versions\n  mutate(\n    report_is_safe = map_lgl(input, ~ gaps_are_valid(seq_gaps(.x))),\n    mod_is_safe    = map_lgl(mod,   ~ gaps_are_valid(seq_gaps(.x))),\n    is_safe = report_is_safe | mod_is_safe\n  ) |> \n  summarize(is_safe = any(is_safe), .by = id) |> \n  \n  # Count all safe reports\n  summarize(total = sum(is_safe)) |> \n  pull()\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}