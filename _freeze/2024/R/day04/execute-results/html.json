{
  "hash": "c9bb5ced6418387232513e4f013d670e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Day 4\"\ndate: 2024-12-04\nauthor:\n  name: https://adventofcode.com/2024/day/4\n  url: https://adventofcode.com/2024/day/4\n---\n\n\n\n\n## Setup\n\nImport libraries:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n\n\nRead text input from file:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninput <- read_lines(\"../input/day04.txt\")\n```\n:::\n\n\n\n\nConvert plain text lines into a character matrix:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtx <- input |> \n  map(~ matrix(str_split_1(.x, \"\"), nrow = 1)) |> \n  do.call(what = rbind)\n```\n:::\n\n\n\n\n## Part 1\n\nExtract rows and columns as separate text strings from the matrix:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtx_rows <- apply(mtx, 1, str_flatten)\nmtx_cols <- apply(mtx, 2, str_flatten)\n```\n:::\n\n\n\n\nExtract diagonals from the matrix by padding each row with leading/trailing spaces, then extracting the new columns as strings:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npadding <- str_dup(\" \", 1:nrow(mtx))\n\nmtx_diag <- map(c(I, rev), \\(f) {\n  str_c(padding, f(mtx_rows), rev(padding)) |> \n    str_split(\"\") |> \n    list_transpose() |> \n    map_chr(str_flatten) |> \n    str_remove_all(\"\\\\s\")\n}) |> \n  unlist()\n```\n:::\n\n\n\n\nSearch for the string `XMAS` (or its reverse, `SAMX`) in each dimension of the matrix and count the total occurrences:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmap(c(\"XMAS\", \"SAMX\"), ~ str_count(c(mtx_rows, mtx_cols, mtx_diag), .x)) |> \n  unlist() |>\n  sum()\n```\n:::\n\n\n\n\n## Part 2\n\nDefine the four possible XMAS patterns in a 3x3 grid as a regex string:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nxmas1 <- \"M.S.A.M.S\"\nxmas4 <- \"S.M.A.S.M\"\nxmas2 <- \"S.S.A.M.M\"\nxmas3 <- \"M.M.A.S.S\"\nxmas_regex <- str_glue(\"{xmas1}|{xmas2}|{xmas3}|{xmas4}\")\n```\n:::\n\n\n\n\nExtract every 3x3 submatrix in the input text block as a text string (concatenating row-wise):\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsub_mtx <- expand_grid(row = 3:nrow(mtx), col = 3:ncol(mtx)) |> \n  pmap(\\(row, col) mtx[row - 0:2, col - 0:2]) |> \n  map_chr(str_flatten)\n```\n:::\n\n\n\n\nCount all text strings with a valid `XMAS` pattern:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(str_detect(sub_mtx, xmas_regex))\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}