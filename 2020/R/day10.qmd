---
title: "Day 10"
date: 2020-12-10
author:
  name: https://adventofcode.com/2020/day/10
  url: https://adventofcode.com/2020/day/10
execute:
  eval: true
---

## Setup

Import libraries:

```{r setup}

library(tidyverse)
library(igraph)
library(tidygraph)
library(ggraph)

```

Disable scientific formatting when displaying large numbers:

```{r}

options(scipen = 999)

```

Read text input from file into a numeric vector:

```{r}

input <- scan("../input/day10.txt")

```

## Part 1

Determine the differences between each jolt value ranked in order so that all are used, manually including the "0" starting point and the output rating of `max(input) + 3`. Compute the total number of 1, 2, and 3-jolt differences:

```{r}

dist <- c(0, input, max(input) + 3) |> 
  sort() |> 
  diff() |> 
  sort() |> 
  rle()

```

Multiply the count of 1-jolt differences by the count of 3-jolt differences:

```{r}

dist$lengths |> 
  keep(dist$values %in% c(1, 3)) |> 
  prod()

```

## Part 2

Convert the list of adapters (including the "0" input and final output) into a graph.

```{r}

g <- expand_grid(
  v1 = c(0, sort(input), max(input) + 3),
  v2 = c(0, sort(input), max(input) + 3)
) |> 
  filter(between(v2 - v1, 1, 3)) |> 
  graph_from_data_frame()

```

Get the list of all separators from the grap (vertices which disconnect the graph if removed):

```{r}

sep <- g |> 
  as_undirected() |> 
  min_separators() |> 
  map_chr(names)

```

The graph of the "small example" in the problem description is shown below, with ends colored green, separators black, and non-separators (nodes which can be individually removed without disconnecting the graph) red:

```{r}
#| fig.height: 2
#| fig.width: 10
#| echo: false
#| output: true

g |>
  as_tbl_graph() |> 
  activate(nodes) |> 
  mutate(
    type = case_match(name, 
      sep ~ "start", 
      c("0", "22") ~ "end", 
      .default = "N/A"
    )
  ) |> 
  ggraph(layout = "linear") +
  geom_edge_arc() +
  geom_node_point(aes(color = type), size = 10) +
  geom_node_text(aes(label = name), color = "white", fontface = "bold") +
  scale_color_manual(values = c("#00897B", "#F4511E", "grey20")) +
  theme_graph(background = "white", base_family = "Helvetica") +
  theme(plot.margin = margin(1, 1, 1, 1, "cm"), legend.position = "none") +
  coord_fixed(ratio = 0.75, clip = "off")

```

For each pair of separators in order, determine the number of possible paths between them. To get the final total count of paths, multiply the result of all pairs together:

```{r}

sep <- sort(as.numeric(sep))

map2(c(0, sep), c(sep, max(input) + 3), \(v1, v2) {
  g |> 
    all_simple_paths(
      as.character(v1), 
      as.character(v2), 
      mode = "out",
      cutoff = v2 - v1
    )
}) |> 
  map_int(length) |> 
  prod()

```
